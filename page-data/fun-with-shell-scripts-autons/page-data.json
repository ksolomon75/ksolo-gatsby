{"componentChunkName":"component---src-templates-blog-post-js","path":"/fun-with-shell-scripts-autons/","result":{"data":{"post":{"id":"cG9zdDoxMTk=","excerpt":"<p>Being a freelance web developer, there are many times where I&#8217;m moving domains for clients (or more recently, myself), and need to know when the DNS entries change to point at the new version of a site. I could just keep submitting an nslookup request manually, but that requires me to stop whatever it is &hellip; <a href=\"/fun-with-shell-scripts-autons/\" class=\"more-link\">Continue reading<span class=\"screen-reader-text\"> &#8220;Fun With Shell Scripts: autons&#8221;</span></a></p>\n","content":"<p>Being a freelance web developer, there are many times where I&#8217;m moving domains for clients (or more recently, myself), and need to know when the <a href=\"http://en.wikipedia.org/wiki/Domain_Name_System\">DNS</a> entries change to point at the new version of a site.  I could just keep submitting an nslookup request manually, but that requires me to stop whatever it is I&#8217;m doing, switch to my terminal app, and execute the command.  After doing a few sites this way, I decided that there had to be a better way&#8230;and there is.  I came up with the following bash script to automate this process.</p>\n<p><code><br />\n#! /bin/bash<br />\ncount=1<br />\nwhile [ 1 ]<br />\ndo<br />\n    echo Attempt $count<br />\n    nslookup $1<br />\n    sleep $2<br />\n    count=`expr $count + 1`<br />\ndone<br />\n</code></p>\n<p>Yes, it&#8217;s just that simple.  As you can see, the script takes 2 parameters, the domain name to check, and a time (in seconds) to pause between each check.  I don&#8217;t know if there&#8217;s a rule about the amount of time between requests for nslookup, but I usually don&#8217;t use anything lower than 5 minutes (300 seconds).</p>\n<p>To use, just paste the code above into a file, save it (I named mine &#8220;autons&#8221;), and give it execute permissions (&#8220;chmod +x autons&#8221;).  To test a site, use something like the following: &#8220;autons yahoo.com 300&#8221;.  This would check the DNS address for yahoo.com every 5 minutes.</p>\n","title":"Fun With Shell Scripts: autons","date":"March 18, 2008","featuredImage":null},"previous":{"uri":"/reciprocity-wordpress-theme/","title":"Reciprocity WordPress Theme"},"next":{"uri":"/ctc-version-41-released/","title":"CTC â€“ Version 4.1 Released"}},"pageContext":{"id":"cG9zdDoxMTk=","previousPostId":"cG9zdDoxMjI=","nextPostId":"cG9zdDozNg=="}},"staticQueryHashes":["1682016598","848497233"],"slicesMap":{}}